name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - '**.md'

env:
  platforms: "linux/amd64,linux/arm64,linux/ppc64le,linux/s390x"

concurrency:
  group: ${{ github.ref_name }}-ci
  cancel-in-progress: true

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name != 'pull_request'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
        if: github.event_name != 'pull_request'
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,ppc64le,s390x
        if: github.event_name != 'pull_request'
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Output Variables
        id: vars
        run: |
          echo "version=$(git describe --tags)" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            nginx/nginx-ingress-operator
            ghcr.io/nginxinc/nginx-ingress-operator
            quay.io/nginx/nginx-ingress-operator
          tags: |
            type=edge
            type=ref,event=pr
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.documentation=https://docs.nginx.com/nginx-ingress-controller
            org.opencontainers.image.vendor=NGINX Inc <kubernetes@nginx.com>
            name="NGINX Ingress Operator"
            maintainer="kubernetes@nginx.com"
            vendor="NGINX Inc"
            version=${{ steps.vars.outputs.version }}
            release=1
            summary="The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers"
            description="The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers"
      - name: Build Image
        uses: docker/build-push-action@v4
        with:
          context: '.'
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ github.event_name != 'pull_request' && env.platforms || '' }}
          load: ${{ github.event_name == 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          no-cache: ${{ github.event_name != 'pull_request' }}
          pull: true
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.9.0
        continue-on-error: true
        with:
          image-ref: nginx/nginx-ingress-operator:${{ steps.meta.outputs.version }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: 'true'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'
      - name: Upload Scan Results
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: 'trivy-results.sarif'
          path: 'trivy-results.sarif'
        if: always()
